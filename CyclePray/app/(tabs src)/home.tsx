import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  Pressable,
  Image,
  Alert,
  ScrollView,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { useRouter } from 'expo-router';

export default function HomeScreen() {
  const router = useRouter();

  const greetings = [
    'As-salamu alaikum, Noor üå∏',
    'Peace be upon you, Noor üå∑',
    'Welcome back, Noor üå∫',
    'Hey Noor üßï Ready to recharge?',
    'May your day be soft and sacred üåº',
    'Salam Noor! You‚Äôre doing amazing üí´',
    'Welcome, lovely soul üåø',
    'Noor, you are light in motion üïäÔ∏è',
    'Hi Noor! Your softness is your strength ‚ú®',
    'You‚Äôre enough, Noor ü§ç',
    'So glad you‚Äôre here üåô',
    'Welcome back, beautiful üå∏',
    'You are safe here, Noor üíê',
    'Hey hey Noor! üåû',
    'Your journey is valid and sacred üìø',
  ];
  const randomGreeting = greetings[Math.floor(Math.random() * greetings.length)];

  const verses = [
    '"Indeed, with hardship comes ease." ‚Äî Qur\'an 94:6',
    '"And He found you lost and guided [you]." ‚Äî Qur\'an 93:7',
    '"Unquestionably, by the remembrance of Allah hearts are assured." ‚Äî Qur\'an 13:28',
    '"Verily, after every difficulty there is relief." ‚Äî Qur\'an 94:5',
    '"So remember Me; I will remember you." ‚Äî Qur\'an 2:152',
    '"My mercy encompasses all things." ‚Äî Qur\'an 7:156',
    '"He is with you wherever you are." ‚Äî Qur\'an 57:4',
    '"Do not despair of the mercy of Allah." ‚Äî Qur\'an 39:53',
    '"Your Lord has not forsaken you." ‚Äî Qur\'an 93:3',
    '"Allah does not burden a soul beyond that it can bear." ‚Äî Qur\'an 2:286',
    '"He knows what is within the hearts." ‚Äî Qur\'an 11:5',
    '"Put your trust in Allah." ‚Äî Qur\'an 3:159',
    '"He created you in stages." ‚Äî Qur\'an 71:14',
    '"He is the best of planners." ‚Äî Qur\'an 3:54',
    '"And We know what his soul whispers to him." ‚Äî Qur\'an 50:16',
  ];
  const randomVerse = verses[Math.floor(Math.random() * verses.length)];

  const careTips = [
    'Breathe deeply for 10 seconds ü´ß',
    'Rest your jaw and shoulders üåø',
    'Sip something warm ü•£',
    'Grant yourself permission to slow down üïäÔ∏è',
    'Take 3 mindful breaths üå¨Ô∏è',
    'Stretch your arms ‚òÅÔ∏è',
    'Drink a full glass of water üíß',
    'Text someone comforting ü´Ç',
    'Blanket + eye rest üõå',
    'Light a candle & recite a du‚Äôa üïØÔ∏è',
    'Smile at yourself in the mirror üòå',
    'Name 3 blessings üçÉ',
    'Open a window for fresh air üå¨Ô∏è',
    'Pause multitasking. Just be üåô',
    'Whisper a peace-giving du‚Äôa üìø',
  ];
  const randomTip = careTips[Math.floor(Math.random() * careTips.length)];

  const worshipReminders = [
    "You‚Äôre still deeply connected to Allah ‚Äî even when you‚Äôre not praying. Du‚Äôa, dhikr, and intention are powerful forms of worship üíû",
    "Every whisper of du‚Äôa reaches the One who hears all üìø",
    "Your rest can be an act of worship when paired with gratitude üåô",
    "Silent dhikr still polishes the heart ‚ú®",
    "Allah sees the tears you don‚Äôt explain ü§≤",
    "You're worshiping by just trying, even in small ways üíñ",
    "Your heart turning toward Allah is worship itself üí´",
    "Even your pain is not lost on Allah ‚Äî keep going ü§ç",
    "Praying with a heavy heart is still prayer üïäÔ∏è",
    "Your cycle is sacred. Honor it. Reflect. You are still beloved üíê",
  ];
  const randomWorshipReminder = worshipReminders[Math.floor(Math.random() * worshipReminders.length)];

  const justForMeOptions = [
    '‚ú® Close your eyes and take 3 deep breaths.',
    'üìø Say ‚ÄúAlhamdulillah‚Äù for something tiny.',
    'üìù Journal: ‚ÄúWhat does my body need today?‚Äù',
    'üíñ Reminder: Rest is a mercy, not a weakness.',
    'üìñ Listen to Surah Ad-Duha for comfort.',
    'üïØÔ∏è Light a candle and be still.',
    'üåßÔ∏è Sit by a window for 2 minutes.',
    'ü•∞ Whisper: ‚ÄúI am worthy of gentleness.‚Äù',
    'üôè Hand on heart, say ‚ÄúBismillah.‚Äù',
    'üå∫ Do nothing for 60 seconds ‚Äî that‚Äôs enough.',
    'üìø Say SubhanAllah 33 times.',
    'ü§≤ Ask Allah for exactly what you need.',
    'üåà Imagine yourself wrapped in divine mercy.',
    'üçØ Make yourself a tiny treat or tea.',
    'üéß Play your favourite Qur‚Äôan recitation.',
  ];
  const handleJustForMe = () => {
    const msg = justForMeOptions[Math.floor(Math.random() * justForMeOptions.length)];
    Alert.alert('Just for You üíå', msg);
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <View style={styles.header}>
        <Image source={require('../../assets/images/icon.png')} style={styles.icon} />
        <Text style={styles.title}>{randomGreeting}</Text>
        <Text style={styles.subtitle}>{randomVerse}</Text>
      </View>

      <View style={styles.quickLinks}>
        {[
          { label: 'Notebook', emoji: 'üìù', link: '/notebook' },
          { label: 'Resources', emoji: 'üìö', link: '/resources' },
          { label: 'Worship', emoji: 'üåô', link: '/worship' },
          { label: 'Your Cycle', emoji: 'üßï', link: '/calendar' },
        ].map(({ label, emoji, link }) => (
          <LinearGradient
            key={label}
            colors={['#EBDCFD', '#D7C4F1']}
            start={{ x: 0, y: 0 }}
            end={{ x: 1, y: 1 }}
            style={styles.linkGradient}
          >
            <Pressable
              onPress={() => router.push(link)}
              style={({ pressed, hovered }) => [
                styles.linkCard,
                pressed && styles.linkPressed,
                hovered && styles.linkHover,
              ]}
            >
              <Text style={styles.linkEmoji}>{emoji}</Text>
              <Text style={styles.linkText}>{label}</Text>
            </Pressable>
          </LinearGradient>
        ))}
      </View>

      <View style={{ alignItems: 'center' }}>
        <LinearGradient colors={['#CDB5F6', '#B89DEB']}style={styles.tipCard}>
          <Text style={styles.tipTitle}>üß¥ Self-Care Tip</Text>
          <Text style={styles.tipText}>{randomTip}</Text>
        </LinearGradient>
      </View>

      <View style={{ alignItems: 'center' }}>
      <LinearGradient colors={['#BFA2F2', '#A98BEF']} style={styles.tipCard}>
      <Text style={styles.tipTitle}>üåô Worship Reminder</Text>
          <Text style={styles.tipText}>{randomWorshipReminder}</Text>
        </LinearGradient>
      </View>

      <Pressable style={styles.justForMeButton} onPress={handleJustForMe}>
        <Text style={styles.justForMeText}>üéÅ Just for Me</Text>
      </Pressable>
    </ScrollView>
  );
}

const COLORS = {
  deepPurple: '#8B5CF6',
  lightBackground: '#F3E8FF',
  textDark: '#333333',
};

const styles = StyleSheet.create({
  container: {
    backgroundColor: COLORS.lightBackground,
    padding: 20,
    paddingTop: 60,
  },
  header: {
    alignItems: 'center',
    marginBottom: 30,
  },
  icon: {
    width: 90,
    height: 90,
    resizeMode: 'contain',
    marginBottom: 10,
  },
  title: {
    fontSize: 30,
    fontWeight: '700',
    color: COLORS.textDark,
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 14,
    color: COLORS.textDark,
    marginTop: 8,
    textAlign: 'center',
    fontStyle: 'italic',
  },
  quickLinks: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    marginBottom: 30,
  },
  linkGradient: {
    width: '48%',
    borderRadius: 20,
    marginBottom: 15,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 6,
    elevation: 2,
    borderWidth: 3,
    borderColor: '#D8B4FE'
  },
  linkCard: {
    borderRadius: 24,
    paddingVertical: 30,
    paddingHorizontal: 14,
    alignItems: 'center',
    justifyContent: 'center',
  },
  linkPressed: {
    transform: [{ scale: 0.97 }],
    opacity: 0.8,
  },
  linkHover: {
    backgroundColor: '#F3F4F6',
  },
  linkEmoji: {
    fontSize: 18,
    marginBottom: 8,
  },
  linkText: {
    fontSize: 20,
    fontWeight: '700',
    color: COLORS.textDark,
  },
  tipCard: {
    width: '100%',
    maxWidth: 400,
    borderRadius: 24,
    padding: 22,
    marginBottom: 22,
    shadowColor: '#B794F4',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.15,
    shadowRadius: 10,
    elevation: 4,
  },
  tipTitle: {
    fontSize: 20,
    fontWeight: '700',
    color: COLORS.textDark,
    marginBottom: 10,
    textAlign: 'center',
  },
  tipText: {
    fontSize: 18,
    color: COLORS.textDark,
    lineHeight: 22,
    textAlign: 'center',
  },
  justForMeButton: {
    backgroundColor: COLORS.deepPurple,
    paddingVertical: 15,
    borderRadius: 25,
    alignItems: 'center',
    marginTop: 10,
    marginBottom: 40,
  },
  justForMeText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
});
