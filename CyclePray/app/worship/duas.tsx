import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

const duasItems = [
  { text: "O Allah, make this a means of purification.", arabic: "ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿßÿ¨ŸíÿπŸéŸÑŸíŸáŸè ÿ≥Ÿéÿ®Ÿéÿ®Ÿãÿß ŸÑŸêŸÑÿ™ŸéŸëÿ∑ŸíŸáŸêŸäÿ±Ÿê", type: "healing" },
  { text: "Ya Shafi, grant me strength and softness today.", arabic: "ŸäŸéÿß ÿ¥ŸéÿßŸÅŸêŸäÿå ÿ£ŸéÿπŸíÿ∑ŸêŸÜŸêŸä ŸÇŸèŸàŸéŸëÿ©Ÿã ŸàŸéŸÑŸêŸäŸÜŸãÿß", type: "strength" },
  { text: "O Turner of hearts, keep my heart firm upon Your religion.", arabic: "ŸäŸéÿß ŸÖŸèŸÇŸéŸÑŸêŸëÿ®Ÿé ÿßŸÑŸíŸÇŸèŸÑŸèŸàÿ®Ÿêÿå ÿ´Ÿéÿ®ŸêŸëÿ™Ÿí ŸÇŸéŸÑŸíÿ®ŸêŸä ÿπŸéŸÑŸéŸâ ÿØŸêŸäŸÜŸêŸÉŸé", type: "faith" },
  { text: "O Allah, You love to forgive ‚Äî so forgive me.", arabic: "ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿ•ŸêŸÜŸéŸëŸÉŸé ÿπŸéŸÅŸèŸàŸåŸë ÿ™Ÿèÿ≠Ÿêÿ®ŸèŸë ÿßŸÑŸíÿπŸéŸÅŸíŸàŸé ŸÅŸéÿßÿπŸíŸÅŸè ÿπŸéŸÜŸêŸëŸä", type: "forgiveness" },
  { text: "O Allah, grant me peace within myself.", arabic: "ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿ£ŸéŸÜŸíÿ≤ŸêŸÑŸí ÿßŸÑÿ≥ŸéŸëŸÉŸêŸäŸÜŸéÿ©Ÿé ŸÅŸêŸä ŸÇŸéŸÑŸíÿ®ŸêŸä", type: "peace" },
  { text: "Help me show gentleness to myself today.", arabic: "ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿ£ŸéÿπŸêŸÜŸêŸëŸä ÿπŸéŸÑŸéŸâ ŸÑŸêŸäŸÜŸê ÿßŸÑÿ∞ŸéŸëÿßÿ™Ÿê", type: "gentleness" },
  { text: "Wrap me in Your mercy, Ya Rahman.", arabic: "ŸäŸéÿß ÿ±Ÿéÿ≠ŸíŸÖŸéŸ∞ŸÜŸèÿå Ÿ±ÿ∫ŸíŸÖŸèÿ±ŸíŸÜŸêŸä ÿ®Ÿêÿ±Ÿéÿ≠ŸíŸÖŸéÿ™ŸêŸÉŸé", type: "mercy" },
  { text: "Guide my heart, soothe my soul.", arabic: "Ÿ±ŸáŸíÿØŸê ŸÇŸéŸÑŸíÿ®ŸêŸä ŸàŸéŸáŸéÿØŸêŸëÿ¶Ÿí ŸÜŸéŸÅŸíÿ≥ŸêŸä", type: "guidance" },
  { text: "O Allah, replace my fear with trust in You.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë Ÿ±ÿ≥Ÿíÿ™Ÿéÿ®ŸíÿØŸêŸÑŸí ÿÆŸéŸàŸíŸÅŸêŸä ÿ®Ÿêÿ´ŸêŸÇŸéÿ©Ÿç ŸÅŸêŸäŸÉŸé", type: "trust" },
  { text: "Grant me serenity in this sacred pause.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë Ÿ±ŸÖŸíŸÜŸéÿ≠ŸíŸÜŸêŸä Ÿ±ŸÑÿ≥ŸéŸëŸÉŸêŸäŸÜŸéÿ©Ÿé ŸÅŸêŸä ŸáŸéÿ∞Ÿéÿß Ÿ±ŸÑŸíŸàŸéŸÇŸíÿ™Ÿê Ÿ±ŸÑŸíŸÖŸèŸÇŸéÿØŸéŸëÿ≥Ÿê", type: "peace" },
  { text: "O Allah, grant me clarity and calmness.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë Ÿ±ÿ±Ÿíÿ≤ŸèŸÇŸíŸÜŸêŸä Ÿ±ŸÑŸíŸàŸèÿ∂ŸèŸàÿ≠Ÿé ŸàŸéŸ±ŸÑŸíŸáŸèÿØŸèŸàÿ°Ÿé", type: "clarity" },
  { text: "Strengthen my faith in moments of doubt.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ŸÇŸéŸàŸêŸë ÿ•ŸêŸäŸÖŸéÿßŸÜŸêŸä ŸÅŸêŸä ŸÑŸéÿ≠Ÿéÿ∏Ÿéÿßÿ™Ÿê Ÿ±ŸÑÿ¥ŸéŸëŸÉŸêŸë", type: "faith" },
  { text: "Ya Noor, bring light into my darkness.", arabic: "ŸäŸéÿß ŸÜŸèŸàÿ±Ÿèÿå ÿ£ŸéŸÜŸíÿ±Ÿê ÿØŸéÿßÿÆŸêŸÑŸêŸä ŸÅŸêŸä Ÿ±ŸÑÿ∏ŸéŸëŸÑŸéÿßŸÖŸê", type: "light" },
  { text: "O Allah, calm the noise inside me.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë Ÿ±ÿ≥ŸíŸÉŸêÿ™Ÿí Ÿ±ŸÑÿ∂ŸéŸëÿ¨ŸêŸäÿ¨Ÿé ÿØŸéÿßÿÆŸêŸÑŸêŸä", type: "tranquility" },
  { text: "Make me content with what You‚Äôve given me.", arabic: "Ÿ±ŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë Ÿ±ÿ¨ŸíÿπŸéŸÑŸíŸÜŸêŸä ÿ±Ÿéÿßÿ∂ŸêŸäŸãÿß ÿ®ŸêŸÖŸéÿß ŸÇŸéÿ≥ŸéŸÖŸíÿ™Ÿé ŸÑŸêŸä", type: "contentment" }
];

export default function DuasScreen() {
  const [favorites, setFavorites] = useState([]);
  const [showFavoritesOnly, setShowFavoritesOnly] = useState(false);

  useEffect(() => {
    AsyncStorage.getItem('@favorite_duas').then(data => {
      if (data) setFavorites(JSON.parse(data));
    });
  }, []);

  const toggleFavorite = (text) => {
    const updated = favorites.includes(text)
      ? favorites.filter(item => item !== text)
      : [...favorites, text];
    setFavorites(updated);
    AsyncStorage.setItem('@favorite_duas', JSON.stringify(updated));
  };

  const sortedItems = [
    ...duasItems.filter(item => favorites.includes(item.text)),
    ...duasItems.filter(item => !favorites.includes(item.text))
  ];

  const filteredItems = showFavoritesOnly
    ? sortedItems.filter(item => favorites.includes(item.text))
    : sortedItems;

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>üìø Du'as</Text>
      <Text style={styles.instructions}>Long press on any du'a to save it to the top ‚ù§Ô∏è</Text>
      <TouchableOpacity style={styles.filterButton} onPress={() => setShowFavoritesOnly(!showFavoritesOnly)}>
        <Text style={styles.filterButtonText}>{showFavoritesOnly ? 'Show All' : 'Show Favorites Only'}</Text>
      </TouchableOpacity>
      {filteredItems.map((item, index) => (
        <TouchableOpacity
          key={index}
          onLongPress={() => toggleFavorite(item.text)}
          style={styles.card}
        >
          <Text style={styles.arabic}>{item.arabic}</Text>
          <Text style={styles.translation}>{item.text}</Text>
          <Text style={styles.type}>Type: {item.type}</Text>
          {favorites.includes(item.text) && <Text style={styles.heart}>‚ù§Ô∏è</Text>}
        </TouchableOpacity>
      ))}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    padding: 20,
    backgroundColor: '#FFF5FD',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#7C3AED',
    marginBottom: 8,
  },
  instructions: {
    fontSize: 13,
    color: '#6D28D9',
    marginBottom: 12,
    fontStyle: 'italic',
  },
  filterButton: {
    alignSelf: 'flex-start',
    backgroundColor: '#EBDFF9',
    paddingVertical: 8,
    paddingHorizontal: 16,
    borderRadius: 20,
    marginBottom: 16,
  },
  filterButtonText: {
    color: '#7C3AED',
    fontWeight: '600',
  },
  card: {
    backgroundColor: '#fff',
    padding: 16,
    marginBottom: 12,
    borderRadius: 12,
    shadowColor: '#BFA2DB',
    shadowOpacity: 0.2,
    shadowOffset: { width: 0, height: 4 },
    shadowRadius: 6,
    elevation: 3,
  },
  arabic: {
    fontSize: 20,
    textAlign: 'right',
    marginBottom: 4,
  },
  translation: {
    fontSize: 16,
    color: '#444',
  },
  type: {
    fontSize: 12,
    color: '#888',
  },
  heart: {
    fontSize: 18,
    marginTop: 8,
    textAlign: 'center',
  },
});
